Top 3 ranking - in employee salary
======================================================================================================
select sno,name,Salary from empsalary order by salary DESC limit 3;
select sno,name,Salary,ROW_NUMBER() OVER(ORDER BY Salary DESC) As salaryRANK from empsalary;
=======================================================================================================
Prepare Sample Data To Practice SQL Skills.
Sample Table – Worker
WORKER_ID	FIRST_NAME	LAST_NAME	SALARY	JOINING_DATE	DEPARTMENT
001	Monika	Arora	100000	2014-02-20 09:00:00	HR
002	Niharika	Verma	80000	2014-06-11 09:00:00	Admin
003	Vishal	Singhal	300000	2014-02-20 09:00:00	HR
004	Amitabh	Singh	500000	2014-02-20 09:00:00	Admin
005	Vivek	Bhati	500000	2014-06-11 09:00:00	Admin
006	Vipul	Diwan	200000	2014-06-11 09:00:00	Account
007	Satish	Kumar	75000	2014-01-20 09:00:00	Account
008	Geetika	Chauhan	90000	2014-04-11 09:00:00	Admin
Sample Table – Bonus
WORKER_REF_ID	BONUS_DATE	BONUS_AMOUNT
1	2016-02-20 00:00:00	5000
2	2016-06-11 00:00:00	3000
3	2016-02-20 00:00:00	4000
1	2016-02-20 00:00:00	4500
2	2016-06-11 00:00:00	3500
Sample Table – Title
WORKER_REF_ID	WORKER_TITLE	AFFECTED_FROM
1	Manager	2016-02-20 00:00:00
2	Executive	2016-06-11 00:00:00
8	Executive	2016-06-11 00:00:00
5	Manager	2016-06-11 00:00:00
4	Asst. Manager	2016-06-11 00:00:00
7	Executive	2016-06-11 00:00:00
6	Lead	2016-06-11 00:00:00
3	Lead	2016-06-11 00:00:00
To prepare the sample data, you can run the following queries in your database query executor or on the SQL command line. We’ve tested them with MySQL Server 5.7 and MySQL Workbench 6.3.8 query browser. You can also download these tools and install them to execute the SQL queries.

SQL Script to Seed Sample Data.
CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11'),
		(003, 4000, '16-02-20'),
		(001, 4500, '16-02-20'),
		(002, 3500, '16-06-11');Copy
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');
 
 ===================================================
 Q-1. Write an SQL query to fetch “FIRST_NAME” from the Worker table using the alias name <WORKER_NAME>.
=========================================================================================================
Select FIRST_NAME AS WORKER_NAME from Worker;
============================================================================================================
Q-2.  Write an SQL query to fetch “FIRST_NAME” from the Worker table in upper case.
=========================================================================================================
Select upper(FIRST_NAME) from Worker;
=======================================================================================================
Q-3. Write an SQL query to fetch unique values of DEPARTMENT from the Worker table.
=======================================================================================================
Select distinct DEPARTMENT from Worker;
=======================================================================================================
Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from the Worker table.
=======================================================================================================
Select substring(FIRST_NAME,1,3) from Worker;
=======================================================================================================
Q-5. Write an SQL query to find the position of the alphabet (‘a’) in the first name column
 ‘Amitabh’ from the Worker table.
======================================================================================================
he required query is:

Select INSTR(FIRST_NAME, BINARY'a') from Worker where FIRST_NAME = 'Amitabh';


The INSTR does a case-insensitive search.
Using the BINARY operator will make INSTR work as the case-sensitive function.
=====================================================================================================
Q-6. Write an SQL query to print the FIRST_NAME from the Worker table after removing white
spaces from the right side.
======================================================================================================
Select RTRIM(FIRST_NAME) from Worker;
======================================================================================================
Q-7. Write an SQL query to print the DEPARTMENT from the Worker table after removing white spaces 
from the left side.
======================================================================================================
Select LTRIM(DEPARTMENT) from Worker;
=======================================================================================================
Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from the Worker table 
and prints its length.
=======================================================================================================
Select distinct length(DEPARTMENT) from Worker;
=======================================================================================================
Q-9. Write an SQL query to print the FIRST_NAME from the Worker table after replacing ‘a’ with ‘A’.
=======================================================================================================
Select REPLACE(FIRST_NAME,'a','A') from Worker;
=======================================================================================================
Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from the Worker table into a single 
column COMPLETE_NAME. A space char should separate them.
=======================================================================================================
Select CONCAT(FIRST_NAME, ' ', LAST_NAME) AS 'COMPLETE_NAME' from Worker;
=======================================================================================================
Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME 
Ascending.
=======================================================================================================
Select * from Worker order by FIRST_NAME asc;
=======================================================================================================
Q-12. Write an SQL query to print all Worker details from the Worker table order by
 FIRST_NAME Ascending and DEPARTMENT Descending.
========================================================================================================
 Select * from Worker order by FIRST_NAME asc, DEPARTMENT Desc;
=======================================================================================================
Q-13. Write an SQL query to print details for Workers with the first names “Vipul” and “Satish” from 
the Worker table.
=======================================================================================================
Select * from Worker where FIRST_NAME in ('Vipul','Satish');
=======================================================================================================
Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” 
from the Worker table.
=======================================================================================================
Select * from Worker where FIRST_NAME not in ('Vipul','Satish');
=======================================================================================================
Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.
=======================================================================================================
Select * from Worker where DEPARTMENT like 'Admin%';
select * from worker where DEPARTMENT = "Admin";
=======================================================================================================
Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
=======================================================================================================
Select * from Worker where FIRST_NAME like '%a%';
=========================================================================================================
 Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
========================================================================================================
Select * from Worker where FIRST_NAME like '%a';
========================================================================================================
Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains 
six alphabets.
=======================================================================================================
Select * from Worker where FIRST_NAME like '-----h';
=======================================================================================================
Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
=======================================================================================================
select * from worker where SALARY between 100000 and 500000;
=======================================================================================================
Q-20. Write an SQL query to print details of the Workers who joined in Feb’2014.
======================================================================================================
Select * from Worker where year(JOINING_DATE) = 2014 and month(JOINING_DATE) = 2;
========================================================================================================
https://www.techbeamers.com/sql-query-questions-answers-for-practice/#let8217s-begin-learning-sql



========================================================================================================
Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
========================================================================================================
select count(*) from worker where DEPARTMENT = 'Admin';
========================================================================================================
Q-22. Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000
=========================================================================================================
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) As Worker_Name, Salary
FROM worker 
WHERE WORKER_ID IN 
(SELECT WORKER_ID FROM worker 
WHERE Salary BETWEEN 50000 AND 100000);


select FIRST_NAME as NAME from worker where SALARY >='50000' 'AND' <='100000';


select concat(FIRST_NAME,'-', LAST_NAME) as NAME, SALARY from worker where SALARY >='50000'
and SALARY <='100000';

TO SAVE OUTPUT INTO NEW TABLE

create table salary AS select distinct sno,name,Salary from empsalary;
=======================================================================================================
Q-23. Write an SQL query to fetch the no. of workers for each department in descending order.
=======================================================================================================
select DEPARTMENT,count(*) as WORKERS from worker group by DEPARTMENT ORDER BY WORKERS DESC;
=======================================================================================================
Q-24. Write an SQL query to print details of the Workers who are also Managers.
=======================================================================================================
SELECT DISTINCT W.FIRST_NAME, T.WORKER_TITLE
FROM Worker W
INNER JOIN Title T
ON W.WORKER_ID = T.WORKER_REF_ID
AND T.WORKER_TITLE in ('Manager');


SELECT DISTINCT W.FIRST_NAME, T.WORKER_TITLE:
This specifies the columns to be retrieved in the result set. We want to select the distinct 
values of the FIRST_NAME column from the Worker table and the WORKER_TITLE column from the Title table.
FROM Worker W: This specifies the table Worker and assigns it the alias W. 
The alias is used as a shorthand reference to the table in the query.
INNER JOIN Title T ON W.WORKER_ID = T.WORKER_REF_ID: This performs an inner join between
 the Worker and Title tables using the WORKER_ID column in the Worker table and the 
 WORKER_REF_ID column in the Title table. This ensures that only matching records are included
 in the result set.
AND T.WORKER_TITLE in ('Manager'): This condition is part of the join clause and specifies that 
only records where the WORKER_TITLE in the Title table is 'Manager' should be included in the result 
set.
By combining these clauses, the query retrieves the distinct first names of workers who hold the 
title 'Manager' by joining the Worker and Title tables and applying the specified conditions.


SELECT DISTINCT FIRST_NAME, WORKER_TITLE
FROM Worker 
INNER JOIN Title 
ON WORKER_ID = WORKER_REF_ID
AND WORKER_TITLE in ('Manager');
==================================================================================================
Q-25. Write an SQL query to fetch duplicate records having matching data in some fields of a table.
=====================================================================================================
SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*)
FROM Title
GROUP BY WORKER_TITLE, AFFECTED_FROM
HAVING COUNT(*) > 1;
======================================================================================================
Q-26. Write an SQL query to show only odd rows from a table.
======================================================================================================
SELECT * FROM Worker WHERE MOD (WORKER_ID, 2) <> 0;
======================================================================================================
Q-27. Write an SQL query to show only even rows from a table.
======================================================================================================
SELECT * FROM Worker WHERE MOD (WORKER_ID, 2) = 0;
=======================================================================================================
Q-28. Write an SQL query to clone a new table from another table.
=======================================================================================================
The general query to clone a table with data is:

SELECT * INTO WorkerClone FROM Worker;

The general way to clone a table without information is:

SELECT * INTO WorkerClone FROM Worker WHERE 1 = 0

An alternate way to clone a table (for MySQL) without data is:

CREATE TABLE WorkerClone LIKE Worker;
========================================================================================================
Q-29. Write an SQL query to fetch intersecting records of two tables.
========================================================================================================
(SELECT * FROM Worker)
INTERSECT
(SELECT * FROM WorkerClone);

SELECT * FROM Worker inner join WC;
========================================================================================================
Q-30. Write an SQL query to show records from one table that another table does not have.
======================================================================================================
SELECT * FROM Worker
MINUS
SELECT * FROM Title;


SELECT *
FROM worker
WHERE worker_id NOT IN (SELECT worker_ref_id FROM title)


=======================================================================================================